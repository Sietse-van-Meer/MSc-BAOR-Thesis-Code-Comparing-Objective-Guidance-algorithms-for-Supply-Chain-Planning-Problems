from numba import njit
import numpy as np
import time


@njit(cache=True)
def calculate_load_at_time(jobs, max_time):
    load_at_time = np.zeros(max_time + 1, dtype=np.int32)
    for job in jobs:
        start, duration, weight = job['start_time'], job['processing_time'], job['weight']
        load_at_time[start:start + duration] += weight
    return load_at_time

@njit(cache=True)
def adjust_load(load_at_time, job, new_start, old_start):
    duration = job['processing_time']
    weight = job['weight']
    if new_start != old_start:
        load_at_time[old_start:old_start + duration] -= weight
        load_at_time[new_start:new_start + duration] += weight

@njit(cache=True)
def calculate_total_overload(load_at_time, c_t):
    overload = np.sum(np.maximum(0, load_at_time - c_t))
    return overload

@njit(cache=True)
def calculate_tardiness(jobs):
    tardiness = np.array([max(0, job['start_time'] + job['processing_time'] - job['due_date']) for job in jobs], dtype=np.int32)
    return tardiness, np.sum(tardiness)

@njit(cache=True)
def calculate_objective_value(total_overload, total_tardiness):
    return 10 * total_overload + total_tardiness

@njit(cache=True)
def is_within_constraints(job, new_start):
    job_end = new_start + job['processing_time']
    lower_bound = job['due_date'] - job['lower_bound']
    upper_bound = job['due_date'] + job['upper_bound']
    return lower_bound <= job_end <= upper_bound

@njit(cache=True)
def evaluate_move(load_at_time, job, new_start, old_start, c_t, total_tardiness):
    duration = job['processing_time']
    weight = job['weight']
    max_time = len(load_at_time) - 1

    # Temporarily adjust load for the new start
    for t in range(new_start, min(new_start + duration, max_time + 1)):
        load_at_time[t] += weight
    for t in range(old_start, min(old_start + duration, max_time + 1)):
        load_at_time[t] -= weight

    # Calculate the new overload and objective
    new_overload = calculate_total_overload(load_at_time, c_t)
    new_tardiness = max(0, new_start + duration - job['due_date'])
    delta_tardiness = new_tardiness - max(0, old_start + duration - job['due_date'])
    new_objective = calculate_objective_value(new_overload, total_tardiness + delta_tardiness)

    # Revert the temporary adjustment
    for t in range(new_start, min(new_start + duration, max_time + 1)):
        load_at_time[t] -= weight
    for t in range(old_start, min(old_start + duration, max_time + 1)):
        load_at_time[t] += weight

    return new_objective, new_overload, delta_tardiness

@njit(cache=True)
def simplified_random_local_search(jobs, c_t, max_time, seed_value, diversification_moves, tenure, max_iterations):
    np.random.seed(seed_value)
    current_solution = jobs.copy()
    max_plateau_moves = 512000
    tabu_list = np.zeros((tenure, 2), dtype=np.int32)  # Tabu list now stores tuples of (job_index, shift)

    load_at_time = calculate_load_at_time(current_solution, max_time)
    tardiness_values = np.array([max(0, job['start_time'] + job['processing_time'] - job['due_date']) for job in current_solution], dtype=np.int32)
    total_tardiness = np.sum(tardiness_values)
    total_overload = calculate_total_overload(load_at_time, c_t)
    current_objective = calculate_objective_value(total_overload, total_tardiness)
    best_objective = current_objective  # Initialize the best objective found

    job_indices = np.arange(len(jobs))
    all_shifts = np.arange(-80, 81)
    all_shifts = all_shifts[all_shifts != 0]  # Remove zero shift (no move)
    plateau_moves = 0  # Initialize counter for plateau moves

    iteration = 0
    while iteration < max_iterations:
        if plateau_moves >= max_plateau_moves:
            tabu_list[:, :] = 0  # Clear tabu list during diversification
            for _ in range(diversification_moves):  # Perform exactly diversification_moves moves
                job_index = np.random.choice(job_indices)
                job = current_solution[job_index]
                old_start = job['start_time']
                shift = np.random.choice(all_shifts)
                new_start = old_start + shift
                iteration += 1
                if 0 <= new_start <= max_time - job['processing_time'] and is_within_constraints(job, new_start):
                    adjust_load(load_at_time, job, new_start, old_start)
                    current_solution[job_index]['start_time'] = new_start
                    tardiness_values[job_index] = max(0, new_start + job['processing_time'] - job['due_date'])
                    total_tardiness = np.sum(tardiness_values)
                    total_overload = calculate_total_overload(load_at_time, c_t)
                    current_objective = calculate_objective_value(total_overload, total_tardiness)
                    if current_objective < best_objective:
                        best_objective = current_objective  # Update the best objective if necessary
            plateau_moves = 0  # Reset plateau moves after diversification

        # Normal operation outside of diversification
        job_index = np.random.choice(job_indices)
        shift = np.random.choice(all_shifts)

        # Check if the (job_index, shift) tuple is in the tabu list
        is_tabu = False
        for i in range(tenure):
            if tabu_list[i, 0] == job_index and tabu_list[i, 1] == shift:
                is_tabu = True
                break

        if is_tabu:
            continue

        job = current_solution[job_index]
        old_start = job['start_time']
        new_start = old_start + shift
        
        iteration += 1
        if 0 <= new_start <= max_time - job['processing_time'] and is_within_constraints(job, new_start):
            new_objective, new_overload, delta_tardiness = evaluate_move(
                load_at_time, job, new_start, old_start, c_t, total_tardiness
            )

            if new_objective <= current_objective:
                if new_objective < current_objective:
                    plateau_moves = 0
                    if new_objective < best_objective:
                        best_objective = new_objective  # Update the best objective found
                else:
                    plateau_moves += 1

                adjust_load(load_at_time, job, new_start, old_start)
                current_solution[job_index]['start_time'] = new_start
                tardiness_values[job_index] += delta_tardiness
                total_tardiness += delta_tardiness
                total_overload = new_overload
                current_objective = new_objective

                # Manual roll: shift all entries in the tabu list one step to the left
                for i in range(tenure - 1):
                    tabu_list[i] = tabu_list[i + 1]
                tabu_list[-1] = (job_index, shift)  # Add new job-move pair to tabu

            else:
                plateau_moves += 1

    return best_objective  # Return the best objective found


def main():
    Job = np.dtype([('id', np.int32), ('processing_time', np.int32), ('weight', np.int32),
                ('due_date', np.int32), ('start_time', np.int32), ('lower_bound', np.int32),
                ('upper_bound', np.int32)])
    jobs = np.array([(1, 111, 111, 1657, 1653, 80, 160), (2, 97, 97, 423, 330, 80, 160), (3, 117, 117, 1336, 1150, 80, 160), (4, 152, 152, 353, 193, 80, 160), (5, 101, 101, 1208, 1081, 80, 160), (6, 83, 83, 1472, 1403, 80, 160), (7, 52, 52, 787, 887, 80, 160), (8, 81, 81, 1731, 1603, 80, 160), (9, 130, 130, 81, 110, 80, 160), (10, 47, 47, 66, 113, 80, 160), (11, 97, 97, 959, 829, 80, 160), (12, 104, 104, 23, 58, 80, 160), (13, 52, 52, 709, 708, 80, 160), (14, 57, 57, 331, 258, 80, 160), (15, 116, 116, 949, 895, 80, 160), (16, 40, 40, 480, 411, 80, 160), (17, 109, 109, 1115, 1117, 80, 160), (18, 64, 64, 642, 579, 80, 160), (19, 61, 61, 1033, 1127, 80, 160), (20, 70, 70, 381, 258, 80, 160), (21, 74, 74, 225, 168, 80, 160), (22, 127, 127, 1634, 1558, 80, 160), (23, 109, 109, 760, 651, 80, 160), (24, 48, 48, 1701, 1629, 80, 160), (25, 142, 142, 1838, 1701, 80, 160), (26, 83, 83, 1362, 1354, 80, 160), (27, 111, 111, 482, 496, 80, 160), (28, 125, 125, 446, 374, 80, 160), (29, 40, 40, 780, 885, 80, 160), (30, 138, 138, 556, 385, 80, 160), (31, 68, 68, 1262, 1283, 80, 160), (32, 108, 108, 1367, 1226, 80, 160), (33, 65, 65, 1145, 1115, 80, 160), (34, 74, 74, 1044, 1110, 80, 160), (35, 58, 58, 62, 34, 80, 160), (36, 115, 115, 618, 470, 80, 160), (37, 137, 137, 497, 462, 80, 160), (38, 57, 57, 1512, 1487, 80, 160), (39, 122, 122, 139, 50, 80, 160), (40, 153, 153, 132, 108, 80, 160), (41, 130, 130, 388, 220, 80, 160), (42, 60, 60, 1374, 1456, 80, 160), (43, 87, 87, 1469, 1305, 80, 160), (44, 51, 51, 1489, 1551, 80, 160), (45, 117, 117, 902, 772, 80, 160), (46, 68, 68, 364, 420, 80, 160), (47, 86, 86, 566, 404, 80, 160), (48, 151, 151, 2, 5, 80, 160), (49, 159, 159, 117, 118, 80, 160), (50, 104, 104, 1221, 1102, 80, 160), (51, 48, 48, 1527, 1570, 80, 160), (52, 57, 57, 1044, 1088, 80, 160), (53, 84, 84, 1489, 1505, 80, 160), (54, 60, 60, 1410, 1444, 80, 160), (55, 90, 90, 1115, 1014, 80, 160), (56, 53, 53, 1527, 1562, 80, 160), (57, 154, 154, 61, 46, 80, 160), (58, 157, 157, 388, 198, 80, 160), (59, 78, 78, 1092, 1009, 80, 160), (60, 130, 130, 216, 158, 80, 160), (61, 71, 71, 1374, 1256, 80, 160), (62, 125, 125, 1720, 1571, 80, 160), (63, 40, 40, 1092, 1011, 80, 160), (64, 102, 102, 182, 189, 80, 160), (65, 126, 126, 596, 558, 80, 160), (66, 145, 145, 566, 383, 80, 160), (67, 136, 136, 139, 26, 80, 160), (68, 151, 151, 267, 142, 80, 160), (69, 76, 76, 538, 572, 80, 160), (70, 129, 129, 1575, 1548, 80, 160), (71, 44, 44, 859, 816, 80, 160), (72, 144, 144, 1807, 1600, 80, 160), (73, 98, 98, 1086, 1078, 80, 160), (74, 47, 47, 1761, 1780, 80, 160), (75, 110, 110, 1362, 1311, 80, 160), (76, 64, 64, 1761, 1657, 80, 160), (77, 48, 48, 411, 399, 80, 160), (78, 114, 114, 1735, 1718, 80, 160), (79, 113, 113, 1840, 1714, 80, 160), (80, 85, 85, 933, 932, 80, 160), (81, 147, 147, 1479, 1355, 80, 160), (82, 71, 71, 443, 507, 80, 160), (83, 69, 69, 294, 354, 80, 160), (84, 44, 44, 1490, 1438, 80, 160), (85, 155, 155, 62, 65, 80, 160), (86, 71, 71, 423, 471, 80, 160), (87, 113, 113, 333, 171, 80, 160), (88, 145, 145, 1092, 990, 80, 160), (89, 93, 93, 344, 292, 80, 160), (90, 65, 65, 238, 221, 80, 160), (91, 43, 43, 1529, 1610, 80, 160), (92, 43, 43, 294, 192, 80, 160), (93, 54, 54, 1446, 1317, 80, 160), (94, 57, 57, 1486, 1384, 80, 160), (95, 69, 69, 16, 10, 80, 160), (96, 100, 100, 1657, 1514, 80, 160), (97, 48, 48, 1196, 1116, 80, 160), (98, 102, 102, 642, 680, 80, 160), (99, 153, 153, 600, 419, 80, 160), (100, 59, 59, 804, 764, 80, 160), (101, 136, 136, 596, 587, 80, 160), (102, 71, 71, 344, 386, 80, 160), (103, 137, 137, 1658, 1539, 80, 160), (104, 140, 140, 1800, 1730, 80, 160), (105, 59, 59, 105, 91, 80, 160), (106, 144, 144, 333, 281, 80, 160), (107, 137, 137, 681, 549, 80, 160), (108, 113, 113, 1838, 1832, 80, 160), (109, 106, 106, 1166, 1006, 80, 160), (110, 139, 139, 1367, 1285, 80, 160), (111, 81, 81, 513, 532, 80, 160), (112, 111, 111, 928, 931, 80, 160), (113, 71, 71, 747, 732, 80, 160), (114, 43, 43, 410, 352, 80, 160), (115, 134, 134, 289, 276, 80, 160), (116, 42, 42, 681, 770, 80, 160), (117, 104, 104, 1807, 1848, 80, 160), (118, 77, 77, 1001, 923, 80, 160), (119, 76, 76, 108, 100, 80, 160), (120, 106, 106, 1203, 1175, 80, 160), (121, 47, 47, 1190, 1077, 80, 160), (122, 128, 128, 1660, 1520, 80, 160), (123, 127, 127, 1593, 1400, 80, 160), (124, 134, 134, 747, 758, 80, 160), (125, 124, 124, 266, 93, 80, 160), (126, 54, 54, 1293, 1175, 80, 160), (127, 81, 81, 1306, 1334, 80, 160), (128, 46, 46, 1764, 1761, 80, 160), (129, 49, 49, 1280, 1357, 80, 160), (130, 134, 134, 1044, 904, 80, 160), (131, 142, 142, 992, 975, 80, 160), (132, 70, 70, 310, 206, 80, 160), (133, 55, 55, 280, 207, 80, 160), (134, 130, 130, 1720, 1657, 80, 160), (135, 104, 104, 1508, 1466, 80, 160), (136, 68, 68, 463, 542, 80, 160), (137, 43, 43, 216, 333, 80, 160), (138, 106, 106, 463, 490, 80, 160), (139, 49, 49, 616, 667, 80, 160), (140, 67, 67, 16, 14, 80, 160), (141, 66, 66, 426, 353, 80, 160), (142, 157, 157, 303, 235, 80, 160), (143, 141, 141, 513, 489, 80, 160), (144, 101, 101, 497, 475, 80, 160), (145, 110, 110, 1306, 1125, 80, 160), (146, 60, 60, 1529, 1620, 80, 160), (147, 51, 51, 81, 65, 80, 160), (148, 83, 83, 289, 348, 80, 160), (149, 113, 113, 211, 122, 80, 160), (150, 138, 138, 1535, 1545, 80, 160), (151, 44, 44, 653, 637, 80, 160), (152, 157, 157, 870, 852, 80, 160), (153, 83, 83, 139, 153, 80, 160), (154, 127, 127, 1633, 1611, 80, 160), (155, 116, 116, 795, 756, 80, 160), (156, 100, 100, 1352, 1352, 80, 160), (157, 131, 131, 775, 788, 80, 160), (158, 43, 43, 762, 809, 80, 160), (159, 49, 49, 333, 276, 80, 160), (160, 79, 79, 454, 357, 80, 160), (161, 160, 160, 592, 542, 80, 160), (162, 103, 103, 1486, 1466, 80, 160), (163, 120, 120, 1262, 1229, 80, 160), (164, 60, 60, 123, 89, 80, 160), (165, 60, 60, 1835, 1819, 80, 160), (166, 104, 104, 1395, 1399, 80, 160), (167, 89, 89, 1395, 1315, 80, 160), (168, 119, 119, 1011, 1017, 80, 160), (169, 141, 141, 423, 257, 80, 160), (170, 42, 42, 216, 144, 80, 160), (171, 86, 86, 1796, 1761, 80, 160), (172, 82, 82, 949, 973, 80, 160), (173, 110, 110, 294, 226, 80, 160), (174, 90, 90, 1764, 1679, 80, 160), (175, 51, 51, 525, 618, 80, 160), (176, 65, 65, 787, 823, 80, 160), (177, 125, 125, 924, 854, 80, 160), (178, 139, 139, 1682, 1593, 80, 160), (179, 68, 68, 117, 178, 80, 160), (180, 136, 136, 1709, 1701, 80, 160), (181, 89, 89, 877, 827, 80, 160), (182, 83, 83, 784, 661, 80, 160), (183, 73, 73, 1639, 1511, 80, 160), (184, 116, 116, 1213, 1036, 80, 160), (185, 119, 119, 1446, 1451, 80, 160), (186, 121, 121, 159, 55, 80, 160), (187, 99, 99, 616, 529, 80, 160), (188, 57, 57, 1227, 1224, 80, 160), (189, 135, 135, 616, 597, 80, 160), (190, 124, 124, 902, 764, 80, 160), (191, 158, 158, 513, 380, 80, 160), (192, 136, 136, 108, 111, 80, 160), (193, 98, 98, 1682, 1535, 80, 160), (194, 40, 40, 762, 765, 80, 160), (195, 129, 129, 1469, 1271, 80, 160), (196, 118, 118, 1286, 1216, 80, 160), (197, 92, 92, 482, 506, 80, 160), (198, 137, 137, 381, 334, 80, 160), (199, 101, 101, 1575, 1460, 80, 160), (200, 99, 99, 1252, 1214, 80, 160), (201, 78, 78, 1527, 1425, 80, 160), (202, 113, 113, 775, 656, 80, 160), (203, 108, 108, 600, 435, 80, 160), (204, 136, 136, 463, 314, 80, 160), (205, 104, 104, 1527, 1411, 80, 160), (206, 106, 106, 1060, 939, 80, 160), (207, 125, 125, 1486, 1343, 80, 160), (208, 136, 136, 1432, 1357, 80, 160), (209, 133, 133, 36, 39, 80, 160), (210, 137, 137, 1810, 1686, 80, 160), (211, 141, 141, 368, 198, 80, 160), (212, 149, 149, 770, 564, 80, 160), (213, 99, 99, 665, 666, 80, 160), (214, 95, 95, 388, 218, 80, 160), (215, 128, 128, 1489, 1380, 80, 160), (216, 55, 55, 353, 294, 80, 160), (217, 94, 94, 445, 362, 80, 160), (218, 136, 136, 681, 694, 80, 160), (219, 84, 84, 132, 180, 80, 160), (220, 144, 144, 1539, 1498, 80, 160), (221, 86, 86, 1115, 1016, 80, 160), (222, 136, 136, 1092, 1082, 80, 160), (223, 96, 96, 1527, 1365, 80, 160), (224, 128, 128, 1034, 997, 80, 160), (225, 85, 85, 1761, 1822, 80, 160), (226, 54, 54, 870, 781, 80, 160), (227, 148, 148, 211, 162, 80, 160), (228, 63, 63, 446, 419, 80, 160), (229, 155, 155, 446, 359, 80, 160), (230, 124, 124, 1810, 1722, 80, 160), (231, 92, 92, 1362, 1257, 80, 160), (232, 128, 128, 1535, 1436, 80, 160), (233, 118, 118, 1306, 1305, 80, 160), (234, 95, 95, 1840, 1860, 80, 160), (235, 84, 84, 877, 844, 80, 160), (236, 60, 60, 1590, 1604, 80, 160), (237, 104, 104, 1507, 1352, 80, 160), (238, 71, 71, 445, 443, 80, 160), (239, 131, 131, 1520, 1326, 80, 160), (240, 142, 142, 1011, 945, 80, 160), (241, 51, 51, 7, 73, 80, 160), (242, 68, 68, 1410, 1329, 80, 160), (243, 96, 96, 423, 328, 80, 160), (244, 160, 160, 1535, 1321, 80, 160), (245, 142, 142, 364, 328, 80, 160), (246, 144, 144, 618, 581, 80, 160), (247, 150, 150, 556, 508, 80, 160), (248, 127, 127, 1835, 1720, 80, 160), (249, 52, 52, 139, 157, 80, 160), (250, 42, 42, 388, 438, 80, 160), (251, 60, 60, 1208, 1278, 80, 160), (252, 99, 99, 1145, 1108, 80, 160), (253, 80, 80, 1469, 1437, 80, 160), (254, 160, 160, 139, 134, 80, 160), (255, 156, 156, 426, 218, 80, 160), (256, 103, 103, 388, 349, 80, 160), (257, 159, 159, 1262, 1204, 80, 160), (258, 72, 72, 1486, 1456, 80, 160), (259, 97, 97, 480, 455, 80, 160), (260, 100, 100, 218, 65, 80, 160), (261, 62, 62, 804, 763, 80, 160), (262, 44, 44, 1222, 1209, 80, 160), (263, 121, 121, 66, 56, 80, 160), (264, 94, 94, 289, 256, 80, 160), (265, 123, 123, 959, 874, 80, 160), (266, 82, 82, 454, 369, 80, 160), (267, 102, 102, 1336, 1318, 80, 160), (268, 72, 72, 482, 517, 80, 160), (269, 155, 155, 1590, 1356, 80, 160), (270, 122, 122, 497, 338, 80, 160), (271, 61, 61, 1489, 1460, 80, 160), (272, 138, 138, 719, 586, 80, 160), (273, 86, 86, 1840, 1853, 80, 160), (274, 47, 47, 972, 1078, 80, 160), (275, 79, 79, 653, 529, 80, 160), (276, 92, 92, 1206, 1194, 80, 160), (277, 89, 89, 556, 559, 80, 160), (278, 119, 119, 863, 834, 80, 160), (279, 138, 138, 949, 762, 80, 160), (280, 105, 105, 857, 910, 80, 160), (281, 104, 104, 321, 157, 80, 160), (282, 119, 119, 1164, 1142, 80, 160), (283, 129, 129, 1432, 1288, 80, 160), (284, 147, 147, 86, 39, 80, 160), (285, 142, 142, 216, 96, 80, 160), (286, 106, 106, 1138, 1180, 80, 160), (287, 130, 130, 1486, 1329, 80, 160), (288, 48, 48, 1479, 1356, 80, 160), (289, 40, 40, 193, 103, 80, 160), (290, 63, 63, 1280, 1226, 80, 160), (291, 141, 141, 488, 395, 80, 160), (292, 55, 55, 1810, 1908, 80, 160), (293, 48, 48, 474, 365, 80, 160), (294, 143, 143, 1507, 1395, 80, 160), (295, 138, 138, 353, 140, 80, 160), (296, 141, 141, 358, 357, 80, 160), (297, 83, 83, 1800, 1640, 80, 160), (298, 56, 56, 1590, 1550, 80, 160), (299, 129, 129, 902, 766, 80, 160), (300, 103, 103, 703, 583, 80, 160), (301, 118, 118, 1639, 1463, 80, 160), (302, 51, 51, 760, 632, 80, 160), (303, 160, 160, 405, 182, 80, 160), (304, 135, 135, 216, 60, 80, 160), (305, 101, 101, 76, 90, 80, 160), (306, 128, 128, 1660, 1565, 80, 160), (307, 123, 123, 1160, 1123, 80, 160), (308, 106, 106, 1508, 1479, 80, 160), (309, 77, 77, 1186, 1111, 80, 160), (310, 86, 86, 1660, 1572, 80, 160), (311, 85, 85, 1034, 955, 80, 160), (312, 68, 68, 795, 727, 80, 160), (313, 45, 45, 1633, 1607, 80, 160), (314, 46, 46, 738, 684, 80, 160), (315, 158, 158, 1432, 1389, 80, 160), (316, 77, 77, 480, 539, 80, 160), (317, 77, 77, 969, 826, 80, 160), (318, 63, 63, 574, 655, 80, 160), (319, 76, 76, 1658, 1610, 80, 160), (320, 143, 143, 674, 473, 80, 160), (321, 131, 131, 933, 898, 80, 160), (322, 133, 133, 674, 585, 80, 160), (323, 107, 107, 859, 786, 80, 160), (324, 154, 154, 211, 13, 80, 160), (325, 89, 89, 859, 883, 80, 160), (326, 42, 42, 933, 942, 80, 160), (327, 151, 151, 267, 123, 80, 160), (328, 91, 91, 1336, 1292, 80, 160), (329, 125, 125, 1527, 1428, 80, 160), (330, 104, 104, 1293, 1307, 80, 160), (331, 148, 148, 1145, 924, 80, 160), (332, 111, 111, 870, 808, 80, 160), (333, 67, 67, 160, 178, 80, 160), (334, 97, 97, 454, 336, 80, 160), (335, 42, 42, 1548, 1533, 80, 160), (336, 114, 114, 1395, 1343, 80, 160), (337, 141, 141, 678, 661, 80, 160), (338, 110, 110, 132, 46, 80, 160), (339, 121, 121, 502, 407, 80, 160), (340, 125, 125, 2, 14, 80, 160), (341, 125, 125, 1306, 1335, 80, 160), (342, 154, 154, 1196, 1059, 80, 160), (343, 134, 134, 1034, 936, 80, 160), (344, 40, 40, 1731, 1766, 80, 160), (345, 54, 54, 1280, 1353, 80, 160), (346, 121, 121, 738, 681, 80, 160), (347, 115, 115, 1746, 1779, 80, 160), (348, 123, 123, 421, 330, 80, 160), (349, 118, 118, 1512, 1514, 80, 160), (350, 71, 71, 86, 130, 80, 160), (351, 157, 157, 1222, 1146, 80, 160), (352, 116, 116, 108, 120, 80, 160), (353, 54, 54, 556, 478, 80, 160), (354, 150, 150, 538, 506, 80, 160), (355, 78, 78, 1145, 1125, 80, 160), (356, 47, 47, 555, 655, 80, 160), (357, 70, 70, 139, 65, 80, 160), (358, 43, 43, 703, 582, 80, 160), (359, 99, 99, 616, 626, 80, 160), (360, 137, 137, 556, 513, 80, 160), (361, 157, 157, 1548, 1520, 80, 160), (362, 129, 129, 405, 389, 80, 160), (363, 52, 52, 877, 873, 80, 160), (364, 99, 99, 66, 12, 80, 160), (365, 41, 41, 182, 289, 80, 160), (366, 159, 159, 1034, 932, 80, 160), (367, 84, 84, 454, 401, 80, 160), (368, 148, 148, 1838, 1678, 80, 160), (369, 106, 106, 1720, 1609, 80, 160), (370, 146, 146, 488, 329, 80, 160), (371, 142, 142, 1612, 1428, 80, 160), (372, 151, 151, 63, 58, 80, 160), (373, 115, 115, 665, 509, 80, 160), (374, 160, 160, 896, 718, 80, 160), (375, 139, 139, 935, 940, 80, 160), (376, 46, 46, 770, 722, 80, 160), (377, 69, 69, 216, 129, 80, 160), (378, 60, 60, 147, 205, 80, 160), (379, 126, 126, 46, 73, 80, 160), (380, 138, 138, 362, 332, 80, 160), (381, 55, 55, 1480, 1386, 80, 160), (382, 125, 125, 1731, 1608, 80, 160), (383, 92, 92, 446, 385, 80, 160), (384, 73, 73, 780, 769, 80, 160), (385, 138, 138, 23, 14, 80, 160), (386, 78, 78, 1262, 1219, 80, 160), (387, 106, 106, 992, 972, 80, 160), (388, 67, 67, 1807, 1891, 80, 160), (389, 95, 95, 463, 386, 80, 160), (390, 63, 63, 1490, 1575, 80, 160), (391, 90, 90, 1252, 1265, 80, 160), (392, 88, 88, 445, 407, 80, 160), (393, 70, 70, 960, 934, 80, 160), (394, 153, 153, 497, 435, 80, 160), (395, 149, 149, 63, 58, 80, 160), (396, 81, 81, 1469, 1531, 80, 160), (397, 114, 114, 1164, 1029, 80, 160), (398, 112, 112, 1164, 990, 80, 160), (399, 99, 99, 703, 562, 80, 160), (400, 94, 94, 665, 688, 80, 160), (401, 118, 118, 1306, 1114, 80, 160), (402, 72, 72, 194, 114, 80, 160), (403, 75, 75, 362, 380, 80, 160), (404, 158, 158, 1014, 908, 80, 160), (405, 60, 60, 431, 370, 80, 160), (406, 149, 149, 928, 859, 80, 160), (407, 70, 70, 1446, 1315, 80, 160), (408, 52, 52, 1331, 1337, 80, 160), (409, 121, 121, 364, 218, 80, 160), (410, 111, 111, 511, 364, 80, 160), (411, 62, 62, 381, 277, 80, 160), (412, 139, 139, 572, 522, 80, 160), (413, 73, 73, 1472, 1448, 80, 160), (414, 73, 73, 1138, 1051, 80, 160), (415, 138, 138, 1331, 1271, 80, 160), (416, 109, 109, 1764, 1697, 80, 160), (417, 156, 156, 1472, 1237, 80, 160), (418, 88, 88, 653, 510, 80, 160), (419, 102, 102, 1206, 1205, 80, 160), (420, 56, 56, 566, 598, 80, 160), (421, 102, 102, 362, 268, 80, 160), (422, 108, 108, 857, 822, 80, 160), (423, 101, 101, 353, 268, 80, 160), (424, 80, 80, 859, 702, 80, 160), (425, 150, 150, 1280, 1134, 80, 160), (426, 69, 69, 216, 138, 80, 160), (427, 158, 158, 1633, 1476, 80, 160), (428, 122, 122, 1352, 1276, 80, 160), (429, 130, 130, 1286, 1278, 80, 160), (430, 73, 73, 720, 625, 80, 160), (431, 117, 117, 959, 871, 80, 160), (432, 109, 109, 423, 340, 80, 160), (433, 97, 97, 1807, 1753, 80, 160), (434, 135, 135, 566, 417, 80, 160), (435, 130, 130, 935, 953, 80, 160), (436, 139, 139, 511, 303, 80, 160), (437, 130, 130, 949, 891, 80, 160), (438, 110, 110, 1009, 973, 80, 160), (439, 154, 154, 333, 312, 80, 160), (440, 80, 80, 1807, 1794, 80, 160), (441, 99, 99, 1472, 1373, 80, 160), (442, 126, 126, 538, 519, 80, 160), (443, 133, 133, 1206, 1219, 80, 160), (444, 137, 137, 972, 906, 80, 160), (445, 53, 53, 132, 142, 80, 160), (446, 60, 60, 502, 475, 80, 160), (447, 132, 132, 321, 153, 80, 160), (448, 159, 159, 1208, 1133, 80, 160), (449, 112, 112, 1764, 1746, 80, 160), (450, 151, 151, 747, 581, 80, 160), (451, 157, 157, 1208, 1014, 80, 160), (452, 127, 127, 1367, 1303, 80, 160), (453, 54, 54, 539, 435, 80, 160), (454, 65, 65, 431, 432, 80, 160), (455, 76, 76, 1035, 1056, 80, 160), (456, 128, 128, 1120, 1134, 80, 160), (457, 96, 96, 1033, 1004, 80, 160), (458, 116, 116, 770, 610, 80, 160), (459, 124, 124, 108, 137, 80, 160), (460, 97, 97, 1011, 1044, 80, 160), (461, 48, 48, 1761, 1733, 80, 160), (462, 101, 101, 1336, 1172, 80, 160), (463, 132, 132, 653, 542, 80, 160), (464, 137, 137, 804, 777, 80, 160), (465, 69, 69, 1014, 957, 80, 160), (466, 131, 131, 1086, 880, 80, 160), (467, 121, 121, 572, 386, 80, 160), (468, 102, 102, 1489, 1422, 80, 160), (469, 145, 145, 123, 90, 80, 160), (470, 148, 148, 1699, 1584, 80, 160), (471, 107, 107, 1810, 1767, 80, 160), (472, 62, 62, 804, 678, 80, 160), (473, 60, 60, 66, 117, 80, 160), (474, 124, 124, 1660, 1533, 80, 160), (475, 112, 112, 959, 819, 80, 160), (476, 144, 144, 1520, 1449, 80, 160), (477, 153, 153, 1208, 1110, 80, 160), (478, 59, 59, 1835, 1711, 80, 160), (479, 153, 153, 511, 391, 80, 160), (480, 132, 132, 454, 469, 80, 160), (481, 150, 150, 1720, 1696, 80, 160), (482, 54, 54, 863, 854, 80, 160), (483, 72, 72, 480, 351, 80, 160), (484, 84, 84, 418, 325, 80, 160), (485, 158, 158, 887, 666, 80, 160), (486, 86, 86, 513, 468, 80, 160), (487, 134, 134, 1508, 1362, 80, 160), (488, 67, 67, 653, 684, 80, 160), (489, 153, 153, 1682, 1650, 80, 160), (490, 144, 144, 1206, 1024, 80, 160), (491, 68, 68, 1033, 891, 80, 160), (492, 134, 134, 859, 838, 80, 160), (493, 150, 150, 381, 381, 80, 160), (494, 102, 102, 1660, 1537, 80, 160), (495, 44, 44, 840, 946, 80, 160), (496, 88, 88, 1122, 1083, 80, 160), (497, 72, 72, 1789, 1722, 80, 160), (498, 156, 156, 381, 181, 80, 160), (499, 92, 92, 1035, 926, 80, 160), (500, 50, 50, 572, 485, 80, 160), (501, 81, 81, 859, 891, 80, 160), (502, 54, 54, 23, 44, 80, 160), (503, 102, 102, 421, 280, 80, 160), (504, 92, 92, 418, 284, 80, 160), (505, 57, 57, 960, 961, 80, 160), (506, 92, 92, 1203, 1238, 80, 160), (507, 153, 153, 108, 113, 80, 160), (508, 88, 88, 1660, 1643, 80, 160), (509, 116, 116, 211, 227, 80, 160), (510, 43, 43, 665, 628, 80, 160), (511, 51, 51, 992, 932, 80, 160), (512, 63, 63, 1446, 1543, 80, 160), (513, 93, 93, 1539, 1372, 80, 160), (514, 122, 122, 512, 489, 80, 160), (515, 151, 151, 674, 538, 80, 160), (516, 111, 111, 720, 591, 80, 160), (517, 104, 104, 1336, 1255, 80, 160), (518, 72, 72, 1720, 1654, 80, 160), (519, 48, 48, 88, 35, 80, 160), (520, 139, 139, 593, 489, 80, 160), (521, 142, 142, 194, 101, 80, 160), (522, 105, 105, 762, 734, 80, 160), (523, 90, 90, 159, 206, 80, 160), (524, 137, 137, 1735, 1724, 80, 160), (525, 110, 110, 887, 906, 80, 160), (526, 49, 49, 1252, 1139, 80, 160), (527, 94, 94, 784, 614, 80, 160), (528, 77, 77, 959, 892, 80, 160), (529, 121, 121, 511, 546, 80, 160), (530, 115, 115, 364, 323, 80, 160), (531, 149, 149, 331, 248, 80, 160), (532, 45, 45, 182, 286, 80, 160), (533, 127, 127, 1539, 1463, 80, 160), (534, 60, 60, 218, 311, 80, 160), (535, 138, 138, 1035, 905, 80, 160), (536, 150, 150, 1701, 1589, 80, 160), (537, 61, 61, 760, 854, 80, 160), (538, 137, 137, 776, 559, 80, 160), (539, 88, 88, 1789, 1772, 80, 160), (540, 61, 61, 16, 78, 80, 160), (541, 75, 75, 193, 86, 80, 160), (542, 142, 142, 1590, 1382, 80, 160), (543, 115, 115, 66, 62, 80, 160), (544, 54, 54, 593, 584, 80, 160), (545, 100, 100, 211, 255, 80, 160), (546, 158, 158, 1206, 1117, 80, 160), (547, 136, 136, 61, 18, 80, 160), (548, 72, 72, 289, 203, 80, 160), (549, 112, 112, 572, 435, 80, 160), (550, 129, 129, 1480, 1327, 80, 160), (551, 149, 149, 928, 789, 80, 160), (552, 51, 51, 410, 418, 80, 160), (553, 134, 134, 88, 58, 80, 160), (554, 52, 52, 216, 180, 80, 160), (555, 112, 112, 574, 409, 80, 160), (556, 83, 83, 405, 290, 80, 160), (557, 154, 154, 280, 80, 80, 160), (558, 93, 93, 1011, 879, 80, 160), (559, 83, 83, 1835, 1822, 80, 160), (560, 75, 75, 1385, 1376, 80, 160), (561, 79, 79, 1219, 1072, 80, 160), (562, 42, 42, 1432, 1518, 80, 160), (563, 102, 102, 1252, 1221, 80, 160), (564, 68, 68, 772, 726, 80, 160), (565, 152, 152, 1701, 1521, 80, 160), (566, 42, 42, 804, 790, 80, 160), (567, 41, 41, 1286, 1236, 80, 160), (568, 147, 147, 482, 476, 80, 160), (569, 148, 148, 1539, 1463, 80, 160), (570, 108, 108, 1203, 1140, 80, 160), (571, 80, 80, 870, 871, 80, 160), (572, 112, 112, 1735, 1588, 80, 160), (573, 51, 51, 1410, 1391, 80, 160), (574, 105, 105, 1336, 1153, 80, 160), (575, 48, 48, 1479, 1486, 80, 160), (576, 114, 114, 267, 186, 80, 160), (577, 67, 67, 211, 161, 80, 160), (578, 128, 128, 454, 248, 80, 160), (579, 51, 51, 1838, 1832, 80, 160), (580, 84, 84, 795, 651, 80, 160), (581, 85, 85, 1186, 1043, 80, 160), (582, 73, 73, 267, 125, 80, 160), (583, 158, 158, 924, 801, 80, 160), (584, 51, 51, 310, 297, 80, 160), (585, 86, 86, 1257, 1156, 80, 160), (586, 123, 123, 1120, 1031, 80, 160), (587, 123, 123, 592, 500, 80, 160), (588, 102, 102, 216, 163, 80, 160), (589, 155, 155, 703, 678, 80, 160), (590, 55, 55, 1138, 1114, 80, 160), (591, 44, 44, 887, 769, 80, 160), (592, 135, 135, 665, 579, 80, 160), (593, 148, 148, 1735, 1630, 80, 160), (594, 142, 142, 1508, 1293, 80, 160), (595, 155, 155, 1416, 1211, 80, 160), (596, 138, 138, 678, 522, 80, 160), (597, 128, 128, 1575, 1480, 80, 160), (598, 80, 80, 1838, 1814, 80, 160), (599, 153, 153, 280, 258, 80, 160), (600, 117, 117, 772, 747, 80, 160), (601, 49, 49, 1709, 1750, 80, 160), (602, 93, 93, 738, 771, 80, 160), (603, 160, 160, 969, 908, 80, 160), (604, 111, 111, 1840, 1839, 80, 160), (605, 51, 51, 123, 42, 80, 160), (606, 99, 99, 1206, 1227, 80, 160), (607, 98, 98, 438, 312, 80, 160), (608, 103, 103, 266, 211, 80, 160), (609, 123, 123, 1633, 1612, 80, 160), (610, 142, 142, 1472, 1261, 80, 160), (611, 130, 130, 1367, 1265, 80, 160), (612, 160, 160, 1190, 1016, 80, 160), (613, 115, 115, 1807, 1850, 80, 160), (614, 79, 79, 452, 352, 80, 160), (615, 46, 46, 555, 472, 80, 160), (616, 109, 109, 992, 812, 80, 160), (617, 136, 136, 62, 0, 80, 160), (618, 120, 120, 1293, 1193, 80, 160), (619, 80, 80, 368, 350, 80, 160), (620, 55, 55, 1395, 1373, 80, 160), (621, 72, 72, 720, 732, 80, 160), (622, 145, 145, 770, 761, 80, 160), (623, 91, 91, 1395, 1289, 80, 160), (624, 51, 51, 1490, 1577, 80, 160), (625, 55, 55, 870, 863, 80, 160), (626, 53, 53, 1007, 949, 80, 160), (627, 96, 96, 1709, 1633, 80, 160), (628, 109, 109, 674, 625, 80, 160), (629, 149, 149, 959, 880, 80, 160), (630, 132, 132, 411, 375, 80, 160), (631, 96, 96, 1145, 1194, 80, 160), (632, 112, 112, 410, 457, 80, 160), (633, 110, 110, 62, 97, 80, 160), (634, 144, 144, 642, 424, 80, 160), (635, 90, 90, 405, 248, 80, 160), (636, 89, 89, 1838, 1699, 80, 160), (637, 159, 159, 969, 961, 80, 160), (638, 46, 46, 1479, 1571, 80, 160), (639, 126, 126, 1219, 1055, 80, 160), (640, 86, 86, 1720, 1664, 80, 160), (641, 139, 139, 935, 765, 80, 160), (642, 119, 119, 1257, 1115, 80, 160), (643, 152, 152, 411, 273, 80, 160), (644, 69, 69, 194, 268, 80, 160), (645, 76, 76, 1374, 1233, 80, 160), (646, 156, 156, 1060, 827, 80, 160), (647, 62, 62, 1395, 1437, 80, 160), (648, 157, 157, 1293, 1149, 80, 160), (649, 115, 115, 887, 771, 80, 160), (650, 119, 119, 439, 475, 80, 160), (651, 149, 149, 566, 419, 80, 160), (652, 156, 156, 438, 396, 80, 160), (653, 68, 68, 66, 116, 80, 160), (654, 72, 72, 539, 483, 80, 160), (655, 131, 131, 1190, 1190, 80, 160), (656, 83, 83, 123, 156, 80, 160), (657, 135, 135, 1446, 1321, 80, 160), (658, 94, 94, 480, 518, 80, 160), (659, 63, 63, 1007, 1093, 80, 160), (660, 61, 61, 445, 521, 80, 160), (661, 127, 127, 1472, 1369, 80, 160), (662, 85, 85, 418, 420, 80, 160), (663, 146, 146, 216, 131, 80, 160), (664, 129, 129, 108, 128, 80, 160), (665, 70, 70, 360, 291, 80, 160), (666, 42, 42, 1480, 1485, 80, 160), (667, 88, 88, 1206, 1249, 80, 160), (668, 107, 107, 780, 617, 80, 160), (669, 129, 129, 2, 8, 80, 160), (670, 87, 87, 1709, 1635, 80, 160), (671, 107, 107, 1293, 1263, 80, 160), (672, 154, 154, 1838, 1739, 80, 160), (673, 102, 102, 344, 204, 80, 160), (674, 47, 47, 1734, 1636, 80, 160), (675, 58, 58, 63, 82, 80, 160), (676, 50, 50, 266, 310, 80, 160), (677, 150, 150, 446, 248, 80, 160), (678, 134, 134, 709, 705, 80, 160), (679, 40, 40, 500, 418, 80, 160), (680, 68, 68, 972, 934, 80, 160), (681, 96, 96, 344, 236, 80, 160), (682, 156, 156, 1115, 1014, 80, 160), (683, 52, 52, 484, 564, 80, 160), (684, 41, 41, 388, 450, 80, 160), (685, 73, 73, 225, 217, 80, 160), (686, 86, 86, 857, 796, 80, 160), (687, 140, 140, 86, 50, 80, 160), (688, 80, 80, 1293, 1242, 80, 160), (689, 54, 54, 421, 361, 80, 160), (690, 84, 84, 772, 664, 80, 160), (691, 82, 82, 1539, 1422, 80, 160), (692, 154, 154, 344, 213, 80, 160), (693, 64, 64, 117, 170, 80, 160), (694, 63, 63, 665, 537, 80, 160), (695, 115, 115, 972, 887, 80, 160), (696, 62, 62, 1529, 1473, 80, 160), (697, 78, 78, 1575, 1559, 80, 160), (698, 118, 118, 760, 707, 80, 160), (699, 124, 124, 333, 154, 80, 160), (700, 43, 43, 1835, 1814, 80, 160), (701, 72, 72, 1508, 1487, 80, 160), (702, 134, 134, 1735, 1570, 80, 160), (703, 150, 150, 747, 698, 80, 160), (704, 116, 116, 1838, 1806, 80, 160), (705, 119, 119, 1367, 1337, 80, 160), (706, 68, 68, 784, 671, 80, 160), (707, 62, 62, 1001, 916, 80, 160), (708, 138, 138, 333, 213, 80, 160), (709, 93, 93, 715, 557, 80, 160), (710, 70, 70, 747, 666, 80, 160), (711, 133, 133, 600, 402, 80, 160), (712, 112, 112, 368, 253, 80, 160), (713, 97, 97, 902, 906, 80, 160), (714, 43, 43, 1735, 1671, 80, 160), (715, 45, 45, 511, 522, 80, 160), (716, 48, 48, 1835, 1836, 80, 160), (717, 40, 40, 1734, 1623, 80, 160), (718, 141, 141, 1314, 1141, 80, 160), (719, 68, 68, 147, 48, 80, 160), (720, 142, 142, 795, 652, 80, 160), (721, 86, 86, 105, 11, 80, 160), (722, 58, 58, 1731, 1655, 80, 160), (723, 71, 71, 709, 683, 80, 160), (724, 154, 154, 959, 859, 80, 160), (725, 49, 49, 1551, 1484, 80, 160), (726, 44, 44, 238, 184, 80, 160), (727, 67, 67, 411, 355, 80, 160), (728, 127, 127, 762, 620, 80, 160), (729, 130, 130, 1800, 1643, 80, 160), (730, 111, 111, 1009, 978, 80, 160), (731, 88, 88, 193, 172, 80, 160), (732, 84, 84, 108, 88, 80, 160), (733, 146, 146, 500, 274, 80, 160), (734, 80, 80, 454, 360, 80, 160), (735, 131, 131, 1007, 829, 80, 160), (736, 99, 99, 902, 835, 80, 160), (737, 98, 98, 266, 117, 80, 160), (738, 78, 78, 1145, 1157, 80, 160), (739, 150, 150, 193, 82, 80, 160), (740, 95, 95, 887, 925, 80, 160), (741, 144, 144, 979, 778, 80, 160), (742, 152, 152, 1480, 1447, 80, 160), (743, 101, 101, 1164, 1056, 80, 160), (744, 50, 50, 596, 626, 80, 160), (745, 159, 159, 331, 159, 80, 160), (746, 129, 129, 1203, 1192, 80, 160), (747, 42, 42, 1035, 1037, 80, 160), (748, 95, 95, 572, 445, 80, 160), (749, 89, 89, 1293, 1308, 80, 160), (750, 124, 124, 1120, 986, 80, 160), (751, 157, 157, 105, 81, 80, 160), (752, 128, 128, 1764, 1564, 80, 160), (753, 46, 46, 1489, 1594, 80, 160), (754, 41, 41, 1306, 1215, 80, 160), (755, 148, 148, 1011, 941, 80, 160), (756, 54, 54, 86, 112, 80, 160), (757, 102, 102, 1385, 1339, 80, 160), (758, 134, 134, 1331, 1309, 80, 160), (759, 45, 45, 678, 608, 80, 160), (760, 46, 46, 1293, 1255, 80, 160), (761, 147, 147, 1660, 1663, 80, 160), (762, 132, 132, 1092, 1070, 80, 160), (763, 50, 50, 1701, 1730, 80, 160), (764, 139, 139, 678, 493, 80, 160), (765, 106, 106, 804, 662, 80, 160), (766, 154, 154, 1395, 1319, 80, 160), (767, 109, 109, 23, 3, 80, 160), (768, 134, 134, 1385, 1280, 80, 160), (769, 65, 65, 1507, 1478, 80, 160), (770, 112, 112, 2, 41, 80, 160), (771, 66, 66, 123, 161, 80, 160), (772, 110, 110, 1507, 1510, 80, 160), (773, 110, 110, 1507, 1395, 80, 160), (774, 90, 90, 979, 914, 80, 160), (775, 105, 105, 446, 446, 80, 160), (776, 87, 87, 744, 620, 80, 160), (777, 136, 136, 1190, 1113, 80, 160), (778, 50, 50, 1235, 1258, 80, 160), (779, 79, 79, 1086, 949, 80, 160), (780, 111, 111, 574, 418, 80, 160), (781, 149, 149, 1590, 1427, 80, 160), (782, 144, 144, 368, 190, 80, 160), (783, 120, 120, 859, 743, 80, 160), (784, 101, 101, 709, 762, 80, 160), (785, 94, 94, 1160, 1107, 80, 160), (786, 56, 56, 410, 444, 80, 160), (787, 123, 123, 1203, 1151, 80, 160), (788, 76, 76, 1480, 1462, 80, 160), (789, 57, 57, 216, 299, 80, 160), (790, 80, 80, 642, 708, 80, 160), (791, 43, 43, 525, 530, 80, 160), (792, 64, 64, 1331, 1218, 80, 160), (793, 155, 155, 216, 57, 80, 160), (794, 115, 115, 1507, 1329, 80, 160), (795, 97, 97, 1014, 1043, 80, 160), (796, 52, 52, 81, 97, 80, 160), (797, 76, 76, 238, 192, 80, 160), (798, 108, 108, 959, 907, 80, 160), (799, 158, 158, 1314, 1213, 80, 160), (800, 122, 122, 1575, 1384, 80, 160)
], dtype=Job)
    
    seeds = [1415, 9265, 3589, 7932, 3846, 2643, 3832, 7950, 2884, 1971, 6939, 9375, 1058, 2097, 4944, 5923, 781, 6406, 2862, 899, 8628, 348, 2534, 2117, 679, 8214, 8086, 5132, 8230, 6647, 938, 4460]
    c_t = 4500
    max_time = max(job['due_date'] + job['upper_bound'] for job in jobs)
    diversification_moves = int(0.375 * len(jobs))
    tenure = int(0.15 * len(jobs))  
    max_iterations_list = [4700000, 8000000, 11000000, 14000000, 17800000]  # Maximum number of iterations

    # Running the search for each value of max_iterations
    for max_iterations in max_iterations_list:
        # Store results for the current max_iterations
        objective_values = []
        durations_list = []

        # Run the search 32 times, each with a different seed
        for i in range(32):
            start_time = time.time()

            # Run the local search for the given seed and max_iterations
            best_objective = simplified_random_local_search(jobs, c_t, max_time, seed_value=seeds[i], 
                                                            diversification_moves=diversification_moves, 
                                                            tenure=tenure, 
                                                            max_iterations=max_iterations)

            duration = time.time() - start_time

            # Skip the first run, which is used for JIT compilation
            if i > 1:
                objective_values.append(best_objective)  # Capture best overall objective value
                durations_list.append(duration)

        # Calculate summary statistics for the current max_iterations
        mean_objective = np.mean(objective_values)
        std_dev_objective = np.std(objective_values)
        min_objective = np.min(objective_values)
        max_objective = np.max(objective_values)
        q1_objective = np.percentile(objective_values, 25)
        q3_objective = np.percentile(objective_values, 75)
        average_duration = np.mean(durations_list)

        # Print the summary for this max_iterations value
        print(f"\nSummary of Objective Values for max_iterations = {max_iterations}:")
        print(f"Mean Objective Value: {mean_objective:.2f}")
        print(f"Standard Deviation: {std_dev_objective:.2f}")
        print(f"Minimum Objective Value: {min_objective:.2f}")
        print(f"Maximum Objective Value: {max_objective:.2f}")
        print(f"Q1 (25th percentile): {q1_objective:.2f}")
        print(f"Q3 (75th percentile): {q3_objective:.2f}")
        print(f"Average Duration per Run: {average_duration:.3f} seconds")

if __name__ == "__main__":
    main()
